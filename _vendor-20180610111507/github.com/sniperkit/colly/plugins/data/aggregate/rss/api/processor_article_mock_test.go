// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/urandom/readeef/content/processor (interfaces: Article)

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	content "github.com/urandom/readeef/content"
)

// MockArticleProcessor is a mock of Article interface
type MockArticleProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockArticleProcessorMockRecorder
}

// MockArticleProcessorMockRecorder is the mock recorder for MockArticleProcessor
type MockArticleProcessorMockRecorder struct {
	mock *MockArticleProcessor
}

// NewMockArticleProcessor creates a new mock instance
func NewMockArticleProcessor(ctrl *gomock.Controller) *MockArticleProcessor {
	mock := &MockArticleProcessor{ctrl: ctrl}
	mock.recorder = &MockArticleProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockArticleProcessor) EXPECT() *MockArticleProcessorMockRecorder {
	return m.recorder
}

// ProcessArticles mocks base method
func (m *MockArticleProcessor) ProcessArticles(arg0 []content.Article) []content.Article {
	ret := m.ctrl.Call(m, "ProcessArticles", arg0)
	ret0, _ := ret[0].([]content.Article)
	return ret0
}

// ProcessArticles indicates an expected call of ProcessArticles
func (mr *MockArticleProcessorMockRecorder) ProcessArticles(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessArticles", reflect.TypeOf((*MockArticleProcessor)(nil).ProcessArticles), arg0)
}
